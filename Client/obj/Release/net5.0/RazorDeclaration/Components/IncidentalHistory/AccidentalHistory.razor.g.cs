// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SOS.FMS.Client.Components.IncidentalHistory
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using SOS.FMS.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using SOS.FMS.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using SOS.FMS.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using SOS.FMS.Client.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using SOS.FMS.Shared.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Syncfusion.Blazor.Spinner;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Syncfusion.Blazor.Popups;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Syncfusion.Blazor.PivotView;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Append.Blazor.Notifications;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using SOS.FMS.Client.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 35 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "C:\Users\Btech\Desktop\FMS\Client\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
    public partial class AccidentalHistory : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
<<<<<<< HEAD
#line 89 "C:\Users\BA Tech\source\repos\sosfms\Client\Components\IncidentalHistory\AccidentalHistory.razor"
=======
#line 89 "C:\Users\Btech\Desktop\FMS\Client\Components\IncidentalHistory\AccidentalHistory.razor"
>>>>>>> master
       
    public List<FMSAccidentVM> AccidentsList { get; set; }
    public List<FMSAccidentVM> FilteredAccidentsList { get; set; }


    public List<SelectListItem> regionsList { get; set; } = new List<SelectListItem>();
    public List<SelectListItem> subRegionsList { get; set; } = new List<SelectListItem>();
    public List<SelectListItem> stationList { get; set; } = new List<SelectListItem>();

    public List<SelectListItem> statusList { get; set; } = new List<SelectListItem>();
    public List<SelectListItem> vehiclesList { get; set; } = new List<SelectListItem>();
    public FMSAccidentVM Filter { get; set; } = new FMSAccidentVM();

    protected override async Task OnInitializedAsync()
    {
        AccidentsList = (await Http.GetFromJsonAsync<List<FMSAccidentVM>>("api/Accident/All"))
            .OrderByDescending(x => x.LastUpdated)
            .ToList();
        FilteredAccidentsList = AccidentsList;
        regionsList = AccidentsList.GroupBy(x => x.Region).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        subRegionsList = AccidentsList.GroupBy(x => x.SubRegion).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        stationList = AccidentsList.GroupBy(x => x.Station).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();

        statusList = AccidentsList.GroupBy(x => x.MaintenanceStatus).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        vehiclesList = AccidentsList.GroupBy(x => x.VehicleNumber).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }

    public void FilterData()
    {
        FilteredAccidentsList = AccidentsList
        .Where(x => (string.IsNullOrEmpty(Filter.Region) || x.Region == Filter.Region))
        .Where(x => (string.IsNullOrEmpty(Filter.SubRegion) || x.SubRegion == Filter.SubRegion))
        .Where(x => (string.IsNullOrEmpty(Filter.Station) || x.Station == Filter.Station))
        .Where(x => (string.IsNullOrEmpty(Filter.MaintenanceStatus) || x.MaintenanceStatus == Filter.MaintenanceStatus))
        .Where(x => (string.IsNullOrEmpty(Filter.VehicleNumber) || x.VehicleNumber == Filter.VehicleNumber))
        .ToList();
    }

    public async void ResetData()
    {
        Filter = new FMSAccidentVM();
        FilteredAccidentsList = AccidentsList;
        regionsList = AccidentsList.GroupBy(x => x.Region)
            .Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        subRegionsList = AccidentsList.GroupBy(x => x.SubRegion)
            .Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        stationList = AccidentsList.GroupBy(x => x.Station)
            .Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        statusList = AccidentsList.GroupBy(x => x.MaintenanceStatus)
        .Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        vehiclesList = AccidentsList.GroupBy(x => x.VehicleNumber)
            .Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        await InvokeAsync(() => StateHasChanged());
    }

    public async Task OnRegionChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        vehiclesList = FilteredAccidentsList.Where(x => x.Region == args.Value)
            .GroupBy(x => x.VehicleNumber).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        subRegionsList = FilteredAccidentsList.Where(x => x.Region == args.Value)
            .GroupBy(x => x.SubRegion).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        stationList = FilteredAccidentsList.Where(x => x.Region == args.Value)
           .GroupBy(x => x.Station).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        StateHasChanged();
    }
    public async Task OnSubRegionChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        stationList = FilteredAccidentsList.Where(x => x.SubRegion == args.Value)
            .GroupBy(x => x.Station).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
        Filter.Region = FilteredAccidentsList.Where(x => x.SubRegion == args.Value).FirstOrDefault().Region;
        vehiclesList = FilteredAccidentsList.Where(x => x.SubRegion == args.Value)
            .GroupBy(x => x.VehicleNumber).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
    }
    public async Task OnStationChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        Filter.Region = FilteredAccidentsList.Where(x => x.Station == args.Value).FirstOrDefault().Region;
        Filter.SubRegion = FilteredAccidentsList.Where(x => x.Station == args.Value).FirstOrDefault().SubRegion;

        vehiclesList = FilteredAccidentsList.Where(x => x.Station == args.Value)
        .GroupBy(x => x.VehicleNumber).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key }).ToList();
    }

    public async Task OnVehicleNumberChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        Filter.Region = FilteredAccidentsList.Where(x => x.VehicleNumber == args.Value).FirstOrDefault().Region;
        Filter.SubRegion = FilteredAccidentsList.Where(x => x.VehicleNumber == args.Value).FirstOrDefault().SubRegion;
        Filter.Station = FilteredAccidentsList.Where(x => x.VehicleNumber == args.Value).FirstOrDefault().Station;

        Filter.MaintenanceStatus = FilteredAccidentsList.Where(x => x.VehicleNumber == args.Value).FirstOrDefault().MaintenanceStatus;
        StateHasChanged();
    }

    #region Syncfusion

    SfGrid<FMSAccidentVM> AccidentsGrid;

    public void AccidentToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "AccidentsGrid_pdfexport")
        {
            PdfExportProperties Props = new PdfExportProperties();
            Props.PageOrientation = PageOrientation.Landscape;
            Props.PageSize = PdfPageSize.A4;
            this.AccidentsGrid.PdfExport(Props);
        }
        if (args.Item.Id == "AccidentsGrid_excelexport")
        {
            this.AccidentsGrid.ExcelExport();
        }
        if (args.Item.Id == "AccidentsGrid_csvexport")
        {
            this.AccidentsGrid.CsvExport();
        }
    }
    #endregion


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private INotificationService NotificationService { get; set; }
    }
}
#pragma warning restore 1591
