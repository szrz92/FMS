@inject HttpClient Http

@if (Vehicles != null)
{
    <form class="form">
        <div class="card-body">
            <div class="form-group row">
                <div class="col-lg-6">
                    <label>Full Name:</label>
                    <SfDropDownList TItem="SelectListItem" TValue="string" Placeholder="Select vehicle" AllowFiltering="true" DataSource="@VehiclesList">
                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                    </SfDropDownList>

                    <span class="form-text text-muted">Please enter your full name</span>
                </div>
                <div class="col-lg-6">
                    <label>Contact Number:</label>
                    <input type="email" class="form-control" placeholder="Enter contact number" />
                    <span class="form-text text-muted">Please enter your contact number</span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-lg-6">
                    <label>Address:</label>
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Enter your address" />
                        <div class="input-group-append"><span class="input-group-text"><i class="la la-map-marker"></i></span></div>
                    </div>
                    <span class="form-text text-muted">Please enter your address</span>
                </div>
                <div class="col-lg-6">
                    <label>Postcode:</label>
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Enter your postcode" />
                        <div class="input-group-append"><span class="input-group-text"><i class="la la-bookmark-o"></i></span></div>
                    </div>
                    <span class="form-text text-muted">Please enter your postcode</span>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-lg-6">
                    <label>User Group:</label>
                    <div class="radio-inline">
                        <label class="radio radio-solid">
                            <input type="radio" name="example_2" checked="checked" value="2" /> Sales Person
                            <span></span>
                        </label>
                        <label class="radio radio-solid">
                            <input type="radio" name="example_2" value="2" /> Customer
                            <span></span>
                        </label>
                    </div>
                    <span class="form-text text-muted">Please select user group</span>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-lg-6">
                    <button type="reset" class="btn btn-primary mr-2">Save</button>
                    <button type="reset" class="btn btn-secondary">Cancel</button>
                </div>
                <div class="col-lg-6 text-right">
                    <button type="reset" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </form>
}
@code {
    public List<GBMSVehicleVM> Vehicles { get; set; }
    public List<SelectListItem> VehiclesList = new List<SelectListItem>();
    public List<SelectListItem> RegionsList = new List<SelectListItem>();

    public List<SelectListItem> SubRegions = new List<SelectListItem>();

    protected override async Task OnInitializedAsync()
    {
        Vehicles = (await Http.GetFromJsonAsync<List<GBMSVehicleVM>>("api/Vehicles/All"))
                        .ToList();
        VehiclesList = Vehicles.GroupBy(x => x.Description).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key })
                            .ToList();
        RegionsList = Vehicles.GroupBy(x => x.Region).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key })
                        .ToList();
        SubRegions = Vehicles.GroupBy(x => x.Subregion).Select(x => new SelectListItem() { Text = x.Key, Value = x.Key })
                        .ToList();

        await base.OnInitializedAsync();
    }

}
