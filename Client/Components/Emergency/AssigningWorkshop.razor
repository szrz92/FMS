@inject HttpClient Http
@inject IJSRuntime JSRuntime

<div id="kt_quick_cart" class="offcanvas offcanvas-right p-10 offcanvas-on" style="width:50%">
    <!--begin::Header-->
    <div class="offcanvas-header d-flex align-items-center justify-content-between pb-7" kt-hidden-height="46" style="">
        <h4 class="font-weight-bold m-0">@CheckPointId.Remarks @VehicleNumber</h4>
        <a @onclick="Close" class="btn btn-xs btn-icon btn-light btn-hover-primary" id="kt_quick_cart_close">
            <i class="ki ki-close icon-xs text-muted"></i>
        </a>
    </div>
    <!--end::Header-->
    <!--begin::Content-->
    <div class="offcanvas-content pr-5 mr-n5 scroll ps ps--active-y">
        <div class="d-flex flex-column">
            <EditForm Model="WorkshopVM">
                <div class="form-group">
                    <label>Vendor Type:</label>
                    <SfDropDownList TItem="SelectListItem" TValue="string" PopupHeight="230px" Placeholder="Select a type" @bind-Value="WorkshopVM.Type" DataSource="@VendorTypes">
                        <DropDownListEvents TValue="string" ValueChange="OnVendorTypeChange"></DropDownListEvents>
                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                    </SfDropDownList>
                    @if (WorkshopVM.Type == "Approved")
                    {
                        <div class="form-group">
                            <label>Vendor Name:</label>
                            <SfDropDownList TItem="SelectListItem" TValue="string" PopupHeight="230px" Placeholder="Select a vendor" @bind-Value="WorkshopVM.Name" DataSource="@ApprovedVendors">
                                <DropDownListEvents TValue="string"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </div>
                    }
                    else if (WorkshopVM.Type == "Un Approved")
                    {
                        <div class="form-group">
                            <label>Vendor Name:</label>
                            <SfDropDownList TItem="SelectListItem" TValue="string" PopupHeight="230px" Placeholder="Select a vendor" @bind-Value="WorkshopVM.Name" DataSource="@ApprovedVendors">
                                <DropDownListEvents TValue="string"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </div>
                    }
                </div>

            </EditForm>
        </div>
        <!--end::Content-->
    </div>
</div>
@code {
    [Parameter]
    public ApiRequest CheckPointId { get; set; }
    [Parameter]
    public string VehicleNumber { get; set; }
    [Parameter]
    public bool Visible { get; set; }
    [Parameter]
    public EventCallback<bool> OnVisibilityChanged { get; set; }

    public List<SelectListItem> VendorTypes { get; set; } = new List<SelectListItem>
    {
        new SelectListItem(){ Text ="Approved", Value= "Approved" },
        new SelectListItem(){ Text ="Un Approved", Value= "Un Approved" }
    };

    public List<SelectListItem> ApprovedVendors { get; set; }

    public WorkshopVM WorkshopVM { get; set; }

    public bool readOnly { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        WorkshopVM = new WorkshopVM() { IncidentId = CheckPointId.FMSEmergencyId };
        ApprovedVendors = await Http.GetFromJsonAsync<List<SelectListItem>>("api/vendors/all");
        await base.OnInitializedAsync();
    }

    public Task Close()
    {
        return OnVisibilityChanged.InvokeAsync(false);
    }

    public void OnVendorTypeChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        if (args.Value != null)
        {
            readOnly = false;
        }
    }
}
