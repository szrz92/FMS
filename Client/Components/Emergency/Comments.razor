@inject HttpClient Http
@inject IJSRuntime JSRuntime

<div id="kt_quick_cart" class="offcanvas offcanvas-right p-10 offcanvas-on" style="width:50%">
    @if (EmergencyCommentModal != null)
    {
        <!--begin::Header-->
        <div class="offcanvas-header d-flex align-items-center justify-content-between pb-7" kt-hidden-height="46" style="">
            <h4 class="font-weight-bold m-0">@EmergencyCommentModal.CheckPointName</h4>
            <a @onclick="CloseEmergencyCommentModal" class="btn btn-xs btn-icon btn-light btn-hover-primary" id="kt_quick_cart_close">
                <i class="ki ki-close icon-xs text-muted"></i>
            </a>
        </div>
        <!--end::Header-->
        <!--begin::Content-->
        <div class="offcanvas-content pr-5 mr-n5 scroll ps ps--active-y">
            <div class="d-flex flex-column-fluid">
                <!--begin::Container-->
                <div class="container pl-0">
                    <!--begin::Chat-->
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="card border border-secondary">
                                <div class="card-header">
                                    <div class="card-title mb-0 font-weight-bolder">Comments</div>
                                </div>
                                <!--begin::Body-->
                                <div class="card-body">
                                    <div class="scrollable" style="overflow-y: auto; max-height: 250px;">
                                        <!--begin::Messages-->
                                        <div class="messages">
                                            @foreach (var comment in EmergencyCommentModal.Comments)
                                            {
                                                <!--begin::Message In-->
                                                <div class="d-flex flex-column mb-5 align-items-start">
                                                    <div class="d-flex align-items-center">
                                                        <div>
                                                            <a href="#" class="text-dark-75 text-hover-primary font-weight-bold font-size-lg">@comment.FMSUserName</a>
                                                            <span class="text-muted font-size-sm">@comment.LastUpdated</span>
                                                        </div>
                                                    </div>
                                                    <div class="mt-2 rounded p-5 bg-light-secondary text-dark-50 font-weight-bold font-size-sm text-left w-90">@comment.Comment</div>
                                                </div>
                                                <!--end::Message In-->
                                            }
                                        </div>
                                        <!--end::Messages-->
                                    </div>
                                </div>
                                <!--end::Body-->
                                <div class="card-footer p-0">
                                    @if (!resetCommentBox)
                                    {
                                        <div class="input-group p-2">
                                            <textarea id="mention1" class="form-control" placeholder="Type comment here."
                                                      style="resize: none" rows="3" aria-label="With textarea"></textarea>
                                            <div class="input-group-append">
                                                <span class="input-group-text btn btn-fms" @onclick="PostEmergencyComment">Post</span>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="input-group p-2">
                                            <textarea id="mention5" class="form-control" placeholder="Type comment here."
                                                      style="resize: none" rows="3" aria-label="With textarea"></textarea>
                                            <div class="input-group-append">
                                                <span class="input-group-text btn btn-fms">Post</span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        @*<div class="col-xl-5">
                            <div class="row">
                                <div class="card">
                                    <div class="card-header">
                                        <div class="card-title mb-0 font-weight-bolder">History</div>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-xl-4">
                                                <a href="#" class="btn btn-fms-emergency font-weight-boldest font-size-sm px-2 py-5">EMERGENCY <br /> 15 JOBS</a>
                                            </div>
                                            <div class="col-xl-4">
                                                <a href="#" class="btn btn-fms font-weight-boldest font-size-sm px-2 py-5">ACCIDENTAL <br /> 15 JOBS</a>
                                            </div>
                                            <div class="col-xl-4">
                                                <a href="#" class="btn btn-fms-daily font-weight-boldest font-size-sm px-5 py-5 w-100">DAILY <br /> 15 JOBS</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>*@
                    </div>
                    <SOS.FMS.Client.Components.Accident.ImageUpload />
                    <!--end::Chat-->
                </div>
                <!--end::Container-->
            </div>
            <!--end::Content-->
        </div>
    }
    else
    {
        <img style="position:fixed;top:50%;left:70%;" src="assets/media/loading.gif" />
    }
</div>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public ClaimsPrincipal CurrentUser { get; set; }

    private DotNetObjectReference<Comments> dotNetObjectReference;
    [Parameter]
    public FMSEmergencyCommentModalVM EmergencyCommentModal { get; set; }
    [Parameter]
    public ApiRequest CheckPointId { get; set; }
    [Parameter]
    public string VehicleNumber { get; set; }
    [Parameter]
    public bool Visible { get; set; }
    [Parameter]
    public EventCallback<bool> OnVisibilityChanged { get; set; }

    public List<GBMSUserVM> usersList { get; set; } = new List<GBMSUserVM>();

    public bool resetCommentBox { get; set; } = false;

    FMSEmergencyCheckCommentVM EmergencyCheckComment;

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;
        dotNetObjectReference = DotNetObjectReference.Create(this);

        NewCommentModel();
        usersList = await Http.GetFromJsonAsync<List<GBMSUserVM>>("api/Users/FMS/All");
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (usersList != null)
        {
            await JSRuntime.InvokeVoidAsync("mention", dotNetObjectReference, usersList);
        }

        if (!(await authenticationStateTask).User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/login");
        }
        else
        {
            CurrentUser = (await authenticationStateTask).User;
        }
        if (EmergencyCommentModal == null)
        {
            NewCommentModel();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    public Task CloseEmergencyCommentModal()
    {
        return OnVisibilityChanged.InvokeAsync(false);
    }
    public async void PostEmergencyComment()
    {
        resetCommentBox = true;
        var postCommentResponse = await Http.PostAsJsonAsync<FMSEmergencyCheckCommentVM>("api/Emergency/FMS/CheckList/Point/Comment/Add", EmergencyCheckComment);
        if (postCommentResponse.StatusCode == System.Net.HttpStatusCode.OK)
        {
            await NewCommentModel();
            resetCommentBox = false;
            StateHasChanged();
        }
        else
        {
        }

    }
    public async Task NewCommentModel()
    {
        EmergencyCheckComment = new FMSEmergencyCheckCommentVM();
        var getFMSEmergencyCommentModalResponse = await Http.PostAsJsonAsync<ApiRequest>("api/Emergency/FMS/CheckList/Point",
            new ApiRequest() { FMSEmergencyCheckId = CheckPointId.FMSEmergencyCheckId, VehicleNumber = VehicleNumber });

        if (getFMSEmergencyCommentModalResponse.StatusCode == System.Net.HttpStatusCode.OK)
        {
            string response = await (getFMSEmergencyCommentModalResponse).Content.ReadAsStringAsync();
            EmergencyCommentModal = JsonConvert.DeserializeObject<FMSEmergencyCommentModalVM>(response);
            EmergencyCheckComment.FMSEmergencyCheckId = CheckPointId.FMSEmergencyCheckId;
            EmergencyCheckComment.FMSEmergencyId = EmergencyCommentModal.FMSEmergencyId;
            EmergencyCheckComment.FMSVehicleId = EmergencyCommentModal.FMSVehicleId;
            EmergencyCheckComment.VehicleNumber = EmergencyCommentModal.VehicleNumber;
            StateHasChanged();
        }
        else
        {
        }
    }

    [JSInvokable]
    public void mention_JSInvoked(List<GBMSUserVM> mentionedUsers, string comment)
    {
        if (EmergencyCheckComment != null)
        {
            EmergencyCheckComment.Comment = comment;
            EmergencyCheckComment.Mentions = (string.Join(",", mentionedUsers.Select(x => x.Id).ToArray()));
        }

        StateHasChanged();
    }
}
