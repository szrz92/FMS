// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SOS.FMS.Server.Models;

namespace SOS.FMS.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210226141651_init47")]
    partial class init47
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "SA",
                            Name = "SA",
                            NormalizedName = "SA"
                        },
                        new
                        {
                            Id = "HMT",
                            Name = "HMT",
                            NormalizedName = "HMT"
                        },
                        new
                        {
                            Id = "MTAM",
                            Name = "MTAM",
                            NormalizedName = "MTAM"
                        },
                        new
                        {
                            Id = "CIM",
                            Name = "CIM",
                            NormalizedName = "CIM"
                        },
                        new
                        {
                            Id = "CPM",
                            Name = "CPM",
                            NormalizedName = "CPM"
                        },
                        new
                        {
                            Id = "RMTO",
                            Name = "RMTO",
                            NormalizedName = "RMTO"
                        },
                        new
                        {
                            Id = "RAO",
                            Name = "RAO",
                            NormalizedName = "RAO"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "c58e1a9d-1c28-46db-830a-7b3f0b9663f1",
                            RoleId = "SA"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "c58e1a9d-1c28-46db-830a-7b3f0b9663f1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1270c01b-7775-4e6d-a5e3-280828afdc4b",
                            Email = "z.raza@batech.com.pk",
                            EmailConfirmed = true,
                            LockoutEnabled = true,
                            Name = "Zain Raza",
                            NormalizedEmail = "Z.RAZA@BATECH.COM.PK",
                            NormalizedUserName = "Z.RAZA@BATECH.COM.PK",
                            PasswordHash = "AQAAAAEAACcQAAAAEKZ5Ogx8cWRZquZ7UJ+JzyoCpcDOkypIqvfDM8VescxUEXMXG1XhiWf4sf1yGewauA==",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b120eecd-102f-4d9e-9783-daf9dc840f8a",
                            TwoFactorEnabled = false,
                            UserName = "z.raza@batech.com.pk"
                        });
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Absents")
                        .HasColumnType("int");

                    b.Property<int>("Accidents")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Emergencies")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("SubRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trips")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Violations")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSAccident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CarOperationalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JobClosingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaintenanceStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubRegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FMSAccidents");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSAccidentalCheck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FMSAccidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaintenanceStatus")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FMSAccidentalCheckList");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSAccidentalCheckComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FMSAccidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSAccidentalCheckId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mentions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FMSAccidentalCheckComments");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSAccidentalCheckImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSAccidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSAccidentalCheckId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FMSAccidentalCheckImages");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSDailyEvening", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EA1")
                        .HasColumnType("bit");

                    b.Property<bool>("EA2")
                        .HasColumnType("bit");

                    b.Property<bool>("EA3")
                        .HasColumnType("bit");

                    b.Property<bool>("EA4")
                        .HasColumnType("bit");

                    b.Property<bool>("EA5")
                        .HasColumnType("bit");

                    b.Property<bool>("EA6")
                        .HasColumnType("bit");

                    b.Property<bool>("EB1")
                        .HasColumnType("bit");

                    b.Property<bool>("EB2")
                        .HasColumnType("bit");

                    b.Property<bool>("EB3")
                        .HasColumnType("bit");

                    b.Property<bool>("EB4")
                        .HasColumnType("bit");

                    b.Property<bool>("EB5")
                        .HasColumnType("bit");

                    b.Property<bool>("EB6")
                        .HasColumnType("bit");

                    b.Property<bool>("EB7")
                        .HasColumnType("bit");

                    b.Property<bool>("EE1")
                        .HasColumnType("bit");

                    b.Property<bool>("EE10")
                        .HasColumnType("bit");

                    b.Property<bool>("EE11")
                        .HasColumnType("bit");

                    b.Property<bool>("EE2")
                        .HasColumnType("bit");

                    b.Property<bool>("EE3")
                        .HasColumnType("bit");

                    b.Property<bool>("EE4")
                        .HasColumnType("bit");

                    b.Property<bool>("EE5")
                        .HasColumnType("bit");

                    b.Property<bool>("EE6")
                        .HasColumnType("bit");

                    b.Property<bool>("EE7")
                        .HasColumnType("bit");

                    b.Property<bool>("EE8")
                        .HasColumnType("bit");

                    b.Property<bool>("EE9")
                        .HasColumnType("bit");

                    b.Property<bool>("EG1")
                        .HasColumnType("bit");

                    b.Property<bool>("EG2")
                        .HasColumnType("bit");

                    b.Property<bool>("EG3")
                        .HasColumnType("bit");

                    b.Property<bool>("EG4")
                        .HasColumnType("bit");

                    b.Property<bool>("EG5")
                        .HasColumnType("bit");

                    b.Property<bool>("EG6")
                        .HasColumnType("bit");

                    b.Property<bool>("EI1")
                        .HasColumnType("bit");

                    b.Property<bool>("EI10")
                        .HasColumnType("bit");

                    b.Property<bool>("EI11")
                        .HasColumnType("bit");

                    b.Property<bool>("EI12")
                        .HasColumnType("bit");

                    b.Property<bool>("EI13")
                        .HasColumnType("bit");

                    b.Property<bool>("EI14")
                        .HasColumnType("bit");

                    b.Property<bool>("EI15")
                        .HasColumnType("bit");

                    b.Property<bool>("EI16")
                        .HasColumnType("bit");

                    b.Property<bool>("EI17")
                        .HasColumnType("bit");

                    b.Property<bool>("EI18")
                        .HasColumnType("bit");

                    b.Property<bool>("EI19")
                        .HasColumnType("bit");

                    b.Property<bool>("EI2")
                        .HasColumnType("bit");

                    b.Property<bool>("EI20")
                        .HasColumnType("bit");

                    b.Property<bool>("EI21")
                        .HasColumnType("bit");

                    b.Property<bool>("EI22")
                        .HasColumnType("bit");

                    b.Property<bool>("EI23")
                        .HasColumnType("bit");

                    b.Property<bool>("EI3")
                        .HasColumnType("bit");

                    b.Property<bool>("EI4")
                        .HasColumnType("bit");

                    b.Property<bool>("EI5")
                        .HasColumnType("bit");

                    b.Property<bool>("EI6")
                        .HasColumnType("bit");

                    b.Property<bool>("EI7")
                        .HasColumnType("bit");

                    b.Property<bool>("EI8")
                        .HasColumnType("bit");

                    b.Property<bool>("EI9")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subregion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FMSDailyEveningChecks");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSDailyMorning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("M1")
                        .HasColumnType("bit");

                    b.Property<bool>("M10")
                        .HasColumnType("bit");

                    b.Property<bool>("M11")
                        .HasColumnType("bit");

                    b.Property<bool>("M12")
                        .HasColumnType("bit");

                    b.Property<bool>("M13")
                        .HasColumnType("bit");

                    b.Property<bool>("M14")
                        .HasColumnType("bit");

                    b.Property<bool>("M15")
                        .HasColumnType("bit");

                    b.Property<bool>("M16")
                        .HasColumnType("bit");

                    b.Property<bool>("M17")
                        .HasColumnType("bit");

                    b.Property<bool>("M18")
                        .HasColumnType("bit");

                    b.Property<bool>("M19")
                        .HasColumnType("bit");

                    b.Property<bool>("M2")
                        .HasColumnType("bit");

                    b.Property<bool>("M20")
                        .HasColumnType("bit");

                    b.Property<bool>("M21")
                        .HasColumnType("bit");

                    b.Property<bool>("M22")
                        .HasColumnType("bit");

                    b.Property<bool>("M23")
                        .HasColumnType("bit");

                    b.Property<bool>("M24")
                        .HasColumnType("bit");

                    b.Property<bool>("M25")
                        .HasColumnType("bit");

                    b.Property<bool>("M3")
                        .HasColumnType("bit");

                    b.Property<bool>("M4")
                        .HasColumnType("bit");

                    b.Property<bool>("M5")
                        .HasColumnType("bit");

                    b.Property<bool>("M6")
                        .HasColumnType("bit");

                    b.Property<bool>("M7")
                        .HasColumnType("bit");

                    b.Property<bool>("M8")
                        .HasColumnType("bit");

                    b.Property<bool>("M9")
                        .HasColumnType("bit");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subregion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FMSDailyMorningChecks");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSEmergency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CarOperationalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JobClosingTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaintenanceStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubRegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FMSEmergencies");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSEmergencyCheck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FMSEmergencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImageCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaintenanceStatus")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FMSEmergencyCheckList");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSEmergencyCheckComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FMSEmergencyCheckId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSEmergencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mentions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FMSEmergencyCheckComments");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSEmergencyCheckImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSEmergencyCheckId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSEmergencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FMSVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FMSEmergencyCheckImages");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSVehicleAccident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Region")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReportedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("SubRegion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FMSVehicleAccidents");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.FMSVehicleScoreCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Breakdowns")
                        .HasColumnType("int");

                    b.Property<double>("CostThisMonth")
                        .HasColumnType("float");

                    b.Property<double>("FuelAverage")
                        .HasColumnType("float");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FMSVehicleScoreCards");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.GBMSUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("XAdvLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("XBankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XBankNameDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("XBasicPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("XBloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCadre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCadreDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCnic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XContractDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDesignationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XEobi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XFatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XGradeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("XGrossPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("XHusbandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XJoiningDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("XNa1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("XNa2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("XNa3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("XName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XNtn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XOfficialEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XOfficialMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XPayMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XPersonalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XPersonalMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XReference1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XReference2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XReligion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XReligionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XSectionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XShift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XShiftDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XSocialSecurity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("XrowId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("GBMSUsers");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.GBMSVehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChasisNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GasolineType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Station")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GBMSVehicles");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.PeriodicHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LastCheckDistance")
                        .HasColumnType("float");

                    b.Property<int>("LastCheckMonth")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PeriodicHistories");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XAbbrevation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("XrowId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.RegionalOffice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XAbbrevation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRegionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("XrowId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("RegionalOffices");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XAbbrevation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XVaultStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("XrowId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.SubRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XAbbrevation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRegionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRevenueAuthroity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRevenueAuthroityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("XrowId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SubRegions");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Breakdowns")
                        .HasColumnType("int");

                    b.Property<double>("CostThisMonth")
                        .HasColumnType("float");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<double>("FuelAverage")
                        .HasColumnType("float");

                    b.Property<long>("IMEI")
                        .HasColumnType("bigint");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SIM")
                        .HasColumnType("bigint");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.VehicleConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("PenalityPoints")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VehicleConfigurations");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.VehicleSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LeavingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleSummaries");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XAbbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("XrowId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("SOS.FMS.Server.Models.Zone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XAbbrevation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRegionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("XrowId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SOS.FMS.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SOS.FMS.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SOS.FMS.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SOS.FMS.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
